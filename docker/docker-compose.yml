version: '2'

services:
  af-db:
    container_name: "af-db"
    image: mysql:5.7
    volumes:
      - /home/db:/var/lib/mysql
      - /home/airflow/docker/db/mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: airflow-db
      MYSQL_DATABASE: airflow
      MYSQL_USER: airflow
      MYSQL_PASSWORD: ariflow-db
      MYSQL_PORT: 3306
      TZ: 'Asia/Tokyo'
    ports:
      - "3306:3306"
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci

  af-redis:
    container_name: "af-redis"
    image: redis:4-alpine
    restart: always
  
  af-scheduler:
    container_name: "af-scheduler"
    image: nhdocker/airflow:v01
    volumes:
      - /home/airflow/dags:/airflow/dags
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - af-db
      - af-redis
    environment:
      MYSQL_ENV_MYSQL_ROOT_PASSWORD: airflow-db
      MYSQL_PORT_3306_TCP_ADDR: af-db
      REDIS_PORT_6379_TCP_ADDR: af-redis
      AWS_S3_BUCKET_NAME: s3-aiflow-logs

  af-webserver:
    container_name: "af-webserver"
    image: nhdocker/airflow:v01
    volumes:
      - /home/airflow/dags:/airflow/dags
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "38080:8080"
    depends_on:
      - af-scheduler
    environment:
      MYSQL_ENV_MYSQL_ROOT_PASSWORD: airflow-db
      MYSQL_PORT_3306_TCP_ADDR: af-db
      REDIS_PORT_6379_TCP_ADDR: af-redis
      AWS_S3_BUCKET_NAME: s3-aiflow-logs
    entrypoint: /root/entrypoint_webserver.sh
    links:
      - af-db
      - af-redis

  af-worker:
    container_name: "af-worker"
    image: nhdocker/airflow:v01
    volumes:
      - /home/airflow/dags:/airflow/dags
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - af-webserver
    environment:
      MYSQL_ENV_MYSQL_ROOT_PASSWORD: airflow-db
      MYSQL_PORT_3306_TCP_ADDR: af-db
      REDIS_PORT_6379_TCP_ADDR: af-redis
      AWS_S3_BUCKET_NAME: s3-aiflow-logs
    entrypoint: /root/entrypoint_worker.sh
    links:
      - af-db
      - af-redis

  af-flower:
    container_name: "af-flower"
    image: nhdocker/airflow:v01
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    ports:
      - "5555:5555"
    depends_on:
      - af-webserver
    environment:
      MYSQL_ENV_MYSQL_ROOT_PASSWORD: airflow-db
      MYSQL_PORT_3306_TCP_ADDR: af-db
      REDIS_PORT_6379_TCP_ADDR: af-redis
      AWS_S3_BUCKET_NAME: s3-airflow-logs
    entrypoint: /root/entrypoint_flower.sh
    links:
      - af-db
      - af-redis

  af-vscode:
    container_name: "af-vscode"
    image: codercom/code-server
    volumes:
      - /home/airflow:/home/coder/project
    restart: always
    ports:
      - "3443:8443"
    entrypoint: "code-server --allow-http --no-auth"

  af-phpadmin:
    container_name: "af-phpadmin"
    image: phpmyadmin/phpmyadmin
    restart: always
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=af-db
      - PMA_USER=root
      - PMA_PASSWORD=airflow-db
    links:
      - af-db
    ports:
      - 48080:80
    volumes:
      - /home/phpadmin:/sessions

  af-redisui:
    container_name: "af-redisui"
    image: tenstartups/redis-commander
    restart: always
    command: --redis-host af-redis
    links:
      - af-redis
    ports:
      - '48081:8081'

  # af-nginx:
  #   container_name: "af-nginx"
  #   image: nhdocker/airflow_nginx:v01
  #   build:
  #     context: .
  #     dockerfile: nginx/Dockerfile
  #   restart: always
  #   ports:
  #     - "80:80"
  #   links:
  #     - af-webserver
  #     - af-vscode
  #     - af-phpadmin
  #     - af-redisui
